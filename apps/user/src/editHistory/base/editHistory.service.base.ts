/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EditHistory as PrismaEditHistory } from "@prisma/client";

export class EditHistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EditHistoryCountArgs, "select">
  ): Promise<number> {
    return this.prisma.editHistory.count(args);
  }

  async editHistories(
    args: Prisma.EditHistoryFindManyArgs
  ): Promise<PrismaEditHistory[]> {
    return this.prisma.editHistory.findMany(args);
  }
  async editHistory(
    args: Prisma.EditHistoryFindUniqueArgs
  ): Promise<PrismaEditHistory | null> {
    return this.prisma.editHistory.findUnique(args);
  }
  async createEditHistory(
    args: Prisma.EditHistoryCreateArgs
  ): Promise<PrismaEditHistory> {
    return this.prisma.editHistory.create(args);
  }
  async updateEditHistory(
    args: Prisma.EditHistoryUpdateArgs
  ): Promise<PrismaEditHistory> {
    return this.prisma.editHistory.update(args);
  }
  async deleteEditHistory(
    args: Prisma.EditHistoryDeleteArgs
  ): Promise<PrismaEditHistory> {
    return this.prisma.editHistory.delete(args);
  }
}
